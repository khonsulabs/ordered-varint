var searchIndex = JSON.parse('{\
"ordered_varint":{"doc":"Provides variable-length signed and unsigned integer …","t":[3,3,8,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Signed","Unsigned","Variable","borrow","borrow","borrow_mut","borrow_mut","decode_variable","decode_variable","decode_variable","encode_variable","encode_variable","encode_variable","from","from","from","from","from","from","from","from","from","from","from","from","into","into","to_variable_vec","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["ordered_varint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A signed integer value.","An unsigned integer value","Encodes and decodes a type using a variable-length format.","","","","","Decodes a variable length value from <code>source</code>.","","","Encodes <code>self</code> into <code>destination</code>, returning the number of …","","","","","","","","","","","","","","","","","Encodes <code>self</code> into a new <code>Vec&lt;u8&gt;</code>.","","","","","",""],"i":[0,0,0,1,2,1,2,3,1,2,3,1,2,1,1,1,1,1,1,2,2,2,2,2,2,1,2,3,1,2,1,2,1,2],"f":[null,null,null,[[]],[[]],[[]],[[]],[[["read",8]],["result",6]],[[["read",8]],["result",6]],[[["read",8]],["result",6]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[]],[[["i32",15]]],[[["i64",15]]],[[["i128",15]]],[[["i16",15]]],[[["i8",15]]],[[["u32",15]]],[[["u16",15]]],[[]],[[["u8",15]]],[[["u64",15]]],[[["u128",15]]],[[]],[[]],[[],[["vec",3,["u8"]],["result",6,["vec"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Signed"],[3,"Unsigned"],[8,"Variable"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};